<!-- 图形验证码  -->
<template>
    <canvas style="width:{{width}}px; height: {{height}}px" class="codeCanvas" canvas-id="codeCanvas" @tap="updateCode"></canvas>
</template>
<script>
import wepy from 'wepy'

export default class VerificationCode extends wepy.component {
  props = {
    width: {
      type: Number,
      default: 90
    },
    height: {
      type: Number,
      default: 40
    },
    backgroundColor: {
      type: String,
      default: '#000'
    },
    lineColor: {
      type: String,
      default: '#fff'
    },
    fontColor: {
      type: String,
      default: '#fff'
    },
    fontSize: {
      type: Number,
      default: 20
    }
  }
  data = {}
  onLoad() {
    this.drawCode()
  }
  methods = {
    updateCode() {
      this.drawCode()
    }
  }
  drawCode() {
    const cxt = wepy.createCanvasContext('codeCanvas')
    cxt.clearRect(0, 0, this.width, this.height)
    cxt.fillStyle = this.backgroundColor
    cxt.fillRect(0, 0, this.width, this.height)
    // 生成干扰线20条
    for (let j = 0; j < 10; j++) {
      cxt.strokeStyle = this.lineColor
      cxt.beginPath() // 若省略beginPath，则每点击一次验证码会累积干扰线的条数
      cxt.moveTo(this.lineX(), this.lineY())
      cxt.lineTo(this.lineX(), this.lineY())
      cxt.lineWidth = 0.3
      cxt.closePath()
      cxt.stroke()
    }
    cxt.fillStyle = this.fontColor
    cxt.font = `bold ${this.fontSize}rpx Arial`
    const code = this.rand()
    cxt.textAlign = 'center'
    cxt.textBaseline = 'middle'
    cxt.fillText(code, this.width / 2, this.height / 2) // 把rand()生成的随机数文本填充到canvas中
    this.$emit('codeValue', code)
    cxt.draw()
  }
  rand() {
    const str = 'abcdefghijklmnopqrstuvwxyz0123456789'
    let arr = str.split('')
    let validate = ''
    let ranNum
    for (let i = 0; i < 4; i++) {
      ranNum = Math.floor(Math.random() * 36) // 随机数在[0,35]之间
      validate += arr[ranNum]
    }
    return validate
  }
  // 干扰线的随机x坐标值
  lineX() {
    const ranLineX = Math.floor(Math.random() * this.width)
    return ranLineX
  }
  // 干扰线的随机y坐标值
  lineY() {
    const ranLineY = Math.floor(Math.random() * this.height)
    return ranLineY
  }
}
</script>
<style lang="scss">
.codeCanvas {
}
</style>
